- name: Check if traefik exists
  ansible.builtin.stat:
    path: /usr/local/bin/traefik
  register: r_traefik

- name: Check if newer traefik exists
  ansible.builtin.shell: |
    latest_tag=$(curl -s https://api.github.com/repos/traefik/traefik/releases/latest | jq -r ".tag_name")
    current_ver=$(/usr/local/bin/traefik version | head -n 1 | sed 's/.*  //')
    case "$current_ver" in ${latest_tag#v} ) echo "latest";; *) echo "outdated";; esac
  register: r_traefik_ver
  when: r_traefik.stat.exists

- name: Get latest traefik
  ansible.builtin.shell: |
    latest_tag=$(curl -s https://api.github.com/repos/traefik/traefik/releases/latest | jq -r ".tag_name")
    latest_url=https://github.com/traefik/traefik/releases/download/${latest_tag}/traefik_${latest_tag}_linux_amd64.tar.gz
    wget -P /tmp $latest_url
    tar -C /usr/local/bin/ -xzf /tmp/"${latest_url##*/}" traefik
    rm /tmp/"${latest_url##*/}"
  when: not r_traefik.stat.exists or r_traefik_ver.stdout != "latest"
  notify: enable and restart traefik

- name: Create group for traefik
  ansible.builtin.group:
    name: traefik
    state: present

- name: Create traefik user
  ansible.builtin.user:
    name: traefik
    groups: 
      - traefik
    state: present

- name: Create traefik dir(s)
  ansible.builtin.file:
    path: /etc/traefik/
    state: directory
    owner: traefik
    group: traefik
    mode: "{{ item.mode|default('0700') }}"

- name: Copy traefik config
  ansible.builtin.copy:
    src: traefik.toml 
    dest: /etc/traefik/traefik.toml

- name: Copy traefik service
  ansible.builtin.copy:
    src: traefik.service
    dest: /etc/systemd/system/
  notify: enable and restart traefik
